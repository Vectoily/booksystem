<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hu.book.mapper.BookMapper" >
  <resultMap id="BaseResultMap" type="com.hu.book.model.Book" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="bookname" property="bookname" jdbcType="VARCHAR" />
    <result column="bookidenty" property="bookidenty" jdbcType="VARCHAR" />
    <result column="author" property="author" jdbcType="VARCHAR" />
    <result column="publisher" property="publisher" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="DOUBLE" />
    <result column="shelftime" property="shelftime" jdbcType="VARCHAR" />
    <result column="remain" property="remain" jdbcType="INTEGER" />
    <result column="picname" property="picname" jdbcType="VARCHAR" />
    <result column="introduct" property="introduct" jdbcType="VARCHAR" />
    <result column="classify" property="classify" jdbcType="VARCHAR" />
    <result column="class_id" property="classId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, bookname, bookidenty, author, publisher, price, shelftime, remain, picname, introduct, 
    classify, class_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hu.book.model.BookExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from book
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from book
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from book
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.hu.book.model.BookExample" >
    delete from book
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hu.book.model.Book" >
    insert into book (id, bookname, bookidenty, 
      author, publisher, price, 
      shelftime, remain, picname, 
      introduct, classify, class_id
      )
    values (#{id,jdbcType=VARCHAR}, #{bookname,jdbcType=VARCHAR}, #{bookidenty,jdbcType=VARCHAR}, 
      #{author,jdbcType=VARCHAR}, #{publisher,jdbcType=VARCHAR}, #{price,jdbcType=DOUBLE}, 
      #{shelftime,jdbcType=VARCHAR}, #{remain,jdbcType=INTEGER}, #{picname,jdbcType=VARCHAR}, 
      #{introduct,jdbcType=VARCHAR}, #{classify,jdbcType=VARCHAR}, #{classId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hu.book.model.Book" >
    insert into book
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="bookname != null" >
        bookname,
      </if>
      <if test="bookidenty != null" >
        bookidenty,
      </if>
      <if test="author != null" >
        author,
      </if>
      <if test="publisher != null" >
        publisher,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="shelftime != null" >
        shelftime,
      </if>
      <if test="remain != null" >
        remain,
      </if>
      <if test="picname != null" >
        picname,
      </if>
      <if test="introduct != null" >
        introduct,
      </if>
      <if test="classify != null" >
        classify,
      </if>
      <if test="classId != null" >
        class_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="bookname != null" >
        #{bookname,jdbcType=VARCHAR},
      </if>
      <if test="bookidenty != null" >
        #{bookidenty,jdbcType=VARCHAR},
      </if>
      <if test="author != null" >
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="publisher != null" >
        #{publisher,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="shelftime != null" >
        #{shelftime,jdbcType=VARCHAR},
      </if>
      <if test="remain != null" >
        #{remain,jdbcType=INTEGER},
      </if>
      <if test="picname != null" >
        #{picname,jdbcType=VARCHAR},
      </if>
      <if test="introduct != null" >
        #{introduct,jdbcType=VARCHAR},
      </if>
      <if test="classify != null" >
        #{classify,jdbcType=VARCHAR},
      </if>
      <if test="classId != null" >
        #{classId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hu.book.model.BookExample" resultType="java.lang.Integer" >
    select count(*) from book
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update book
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.bookname != null" >
        bookname = #{record.bookname,jdbcType=VARCHAR},
      </if>
      <if test="record.bookidenty != null" >
        bookidenty = #{record.bookidenty,jdbcType=VARCHAR},
      </if>
      <if test="record.author != null" >
        author = #{record.author,jdbcType=VARCHAR},
      </if>
      <if test="record.publisher != null" >
        publisher = #{record.publisher,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=DOUBLE},
      </if>
      <if test="record.shelftime != null" >
        shelftime = #{record.shelftime,jdbcType=VARCHAR},
      </if>
      <if test="record.remain != null" >
        remain = #{record.remain,jdbcType=INTEGER},
      </if>
      <if test="record.picname != null" >
        picname = #{record.picname,jdbcType=VARCHAR},
      </if>
      <if test="record.introduct != null" >
        introduct = #{record.introduct,jdbcType=VARCHAR},
      </if>
      <if test="record.classify != null" >
        classify = #{record.classify,jdbcType=VARCHAR},
      </if>
      <if test="record.classId != null" >
        class_id = #{record.classId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update book
    set id = #{record.id,jdbcType=VARCHAR},
      bookname = #{record.bookname,jdbcType=VARCHAR},
      bookidenty = #{record.bookidenty,jdbcType=VARCHAR},
      author = #{record.author,jdbcType=VARCHAR},
      publisher = #{record.publisher,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DOUBLE},
      shelftime = #{record.shelftime,jdbcType=VARCHAR},
      remain = #{record.remain,jdbcType=INTEGER},
      picname = #{record.picname,jdbcType=VARCHAR},
      introduct = #{record.introduct,jdbcType=VARCHAR},
      classify = #{record.classify,jdbcType=VARCHAR},
      class_id = #{record.classId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hu.book.model.Book" >
    update book
    <set >
      <if test="bookname != null" >
        bookname = #{bookname,jdbcType=VARCHAR},
      </if>
      <if test="bookidenty != null" >
        bookidenty = #{bookidenty,jdbcType=VARCHAR},
      </if>
      <if test="author != null" >
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="publisher != null" >
        publisher = #{publisher,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="shelftime != null" >
        shelftime = #{shelftime,jdbcType=VARCHAR},
      </if>
      <if test="remain != null" >
        remain = #{remain,jdbcType=INTEGER},
      </if>
      <if test="picname != null" >
        picname = #{picname,jdbcType=VARCHAR},
      </if>
      <if test="introduct != null" >
        introduct = #{introduct,jdbcType=VARCHAR},
      </if>
      <if test="classify != null" >
        classify = #{classify,jdbcType=VARCHAR},
      </if>
      <if test="classId != null" >
        class_id = #{classId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hu.book.model.Book" >
    update book
    set bookname = #{bookname,jdbcType=VARCHAR},
      bookidenty = #{bookidenty,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      publisher = #{publisher,jdbcType=VARCHAR},
      price = #{price,jdbcType=DOUBLE},
      shelftime = #{shelftime,jdbcType=VARCHAR},
      remain = #{remain,jdbcType=INTEGER},
      picname = #{picname,jdbcType=VARCHAR},
      introduct = #{introduct,jdbcType=VARCHAR},
      classify = #{classify,jdbcType=VARCHAR},
      class_id = #{classId,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>