<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hu.book.mapper.BorrowMapper" >
  <resultMap id="BaseResultMap" type="com.hu.book.model.Borrow" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="book_id" property="bookId" jdbcType="VARCHAR" />
    <result column="student_id" property="studentId" jdbcType="VARCHAR" />
    <result column="lentime" property="lentime" jdbcType="VARCHAR" />
    <result column="returntime" property="returntime" jdbcType="VARCHAR" />
    <result column="backtime" property="backtime" jdbcType="VARCHAR" />
    <result column="money" property="money" jdbcType="DOUBLE" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, book_id, student_id, lentime, returntime, backtime, money
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hu.book.model.BorrowExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from borrow
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from borrow
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from borrow
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.hu.book.model.BorrowExample" >
    delete from borrow
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hu.book.model.Borrow" >
    insert into borrow (id, book_id, student_id, 
      lentime, returntime, backtime, 
      money)
    values (#{id,jdbcType=VARCHAR}, #{bookId,jdbcType=VARCHAR}, #{studentId,jdbcType=VARCHAR}, 
      #{lentime,jdbcType=VARCHAR}, #{returntime,jdbcType=VARCHAR}, #{backtime,jdbcType=VARCHAR}, 
      #{money,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" parameterType="com.hu.book.model.Borrow" >
    insert into borrow
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="bookId != null" >
        book_id,
      </if>
      <if test="studentId != null" >
        student_id,
      </if>
      <if test="lentime != null" >
        lentime,
      </if>
      <if test="returntime != null" >
        returntime,
      </if>
      <if test="backtime != null" >
        backtime,
      </if>
      <if test="money != null" >
        money,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="bookId != null" >
        #{bookId,jdbcType=VARCHAR},
      </if>
      <if test="studentId != null" >
        #{studentId,jdbcType=VARCHAR},
      </if>
      <if test="lentime != null" >
        #{lentime,jdbcType=VARCHAR},
      </if>
      <if test="returntime != null" >
        #{returntime,jdbcType=VARCHAR},
      </if>
      <if test="backtime != null" >
        #{backtime,jdbcType=VARCHAR},
      </if>
      <if test="money != null" >
        #{money,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hu.book.model.BorrowExample" resultType="java.lang.Integer" >
    select count(*) from borrow
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update borrow
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.bookId != null" >
        book_id = #{record.bookId,jdbcType=VARCHAR},
      </if>
      <if test="record.studentId != null" >
        student_id = #{record.studentId,jdbcType=VARCHAR},
      </if>
      <if test="record.lentime != null" >
        lentime = #{record.lentime,jdbcType=VARCHAR},
      </if>
      <if test="record.returntime != null" >
        returntime = #{record.returntime,jdbcType=VARCHAR},
      </if>
      <if test="record.backtime != null" >
        backtime = #{record.backtime,jdbcType=VARCHAR},
      </if>
      <if test="record.money != null" >
        money = #{record.money,jdbcType=DOUBLE},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update borrow
    set id = #{record.id,jdbcType=VARCHAR},
      book_id = #{record.bookId,jdbcType=VARCHAR},
      student_id = #{record.studentId,jdbcType=VARCHAR},
      lentime = #{record.lentime,jdbcType=VARCHAR},
      returntime = #{record.returntime,jdbcType=VARCHAR},
      backtime = #{record.backtime,jdbcType=VARCHAR},
      money = #{record.money,jdbcType=DOUBLE}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hu.book.model.Borrow" >
    update borrow
    <set >
      <if test="bookId != null" >
        book_id = #{bookId,jdbcType=VARCHAR},
      </if>
      <if test="studentId != null" >
        student_id = #{studentId,jdbcType=VARCHAR},
      </if>
      <if test="lentime != null" >
        lentime = #{lentime,jdbcType=VARCHAR},
      </if>
      <if test="returntime != null" >
        returntime = #{returntime,jdbcType=VARCHAR},
      </if>
      <if test="backtime != null" >
        backtime = #{backtime,jdbcType=VARCHAR},
      </if>
      <if test="money != null" >
        money = #{money,jdbcType=DOUBLE},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hu.book.model.Borrow" >
    update borrow
    set book_id = #{bookId,jdbcType=VARCHAR},
      student_id = #{studentId,jdbcType=VARCHAR},
      lentime = #{lentime,jdbcType=VARCHAR},
      returntime = #{returntime,jdbcType=VARCHAR},
      backtime = #{backtime,jdbcType=VARCHAR},
      money = #{money,jdbcType=DOUBLE}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>